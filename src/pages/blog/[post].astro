---
export const prerender = false; // Not needed in 'server' mode

import { sanityClient } from "sanity:client";
import { PortableText } from "astro-portabletext";

import Layout from "../../layouts/Layout.astro";
import Attendee from "../../components/Attendee.astro";
import ImageShowcase from "../../components/ImageShowcase.astro";

// Get project slug from URL
const { post } = Astro.params;

const formatDate = (dateString: string) => {
  const months = [
    "Styczeń",
    "Luty",
    "Marzec",
    "Kwiecień",
    "Maj",
    "Czerwiec",
    "Lipiec",
    "Sierpień",
    "Wrzesień",
    "Październik",
    "Listopad",
    "Grudzień",
  ];

  const date = new Date(dateString);
  const day = date.getDate().toString().padStart(2, "0"); // Двузначный день
  const month = months[date.getMonth()]; // Название месяца
  const year = date.getFullYear(); // Название месяца
  return `${day} ${month} ${year}`;
};

interface PostsResponse {
  title: string;
  slug: string;
  author: string;
  mainImage?: {
    asset?: {
      url: string;
    };
  };
  attendee?: {
    name: string;
    photoUrl: string;
    academicTitle: string;
  };
  publishedAt?: string;

  images?: {
    src: string;
    title: string;
    description: string;
  }[];
  photoUrl?: string[];
  excerpt?: string;
  content?: Array<
    | {
        _type: "block";
        children: Array<{ text: string }>;
      }
    | {
        _type: "image";
        url: string;
      }
  >;
  seo?: {
    metaTitle?: string;
    metaDescription?: string;
    keywords?: string[];
  };
}

const postQuery = `*[_type == "blogPost" && slug.current == $slug][0] {
  title,
  slug,
  attendee->{
    _id,
    name,
    academicTitle,
    photoUrl,  
  },
  publishedAt,
 mainImage{
      asset->{url}
    },
  excerpt,
  content,
  images[]->{
    _id,
    src,
    title,
    description,
    top
  },
  seo {
    metaTitle,
    metaDescription,
    keywords
  }
}
`;

const postsResponse = await sanityClient.fetch<PostsResponse>(postQuery, {
  slug: post,
});


// Get project slug from URL
const {
  title = "Default Title",
  seo = {},
  author = "Unknown Author",
  mainImage = undefined,
  excerpt = "No excerpt available",
  content = [],
  images = [],
  publishedAt = "",
} = postsResponse || {};
---

<Layout
  title={title}
  description={seo.metaDescription || ""}
  keywords={seo.keywords?.join(", ") || ""}
  author={author}
  ogImage={mainImage?.asset?.url || ""}
>
  <article class="container">
    <div class="my-4">
      <h2 class="text-center">{title}</h2>
      <p class="text-center">{excerpt}</p>
    </div>
    <div class="flex justify-between items-center my-4">
      <div>{formatDate(publishedAt)}</div>
      <Attendee
        name={postsResponse?.attendee?.name ? postsResponse.attendee.name : ""}
        photoUrl={postsResponse?.attendee?.photoUrl
          ? postsResponse?.attendee?.photoUrl
          : ""}
        academicTitle={postsResponse?.attendee?.academicTitle}
      />
    </div>
    <div class="flex gap-4">
      {
        mainImage?.asset?.url && (
          <img src={mainImage.asset.url} alt={title} class="w-[50%]" />
        )
      }
      <div class="">
        <PortableText value={content ?? []} />
      </div>
    </div>
    {images.length > 0 && <ImageShowcase images={images ?? []} />}
  </article>
  
</Layout>
